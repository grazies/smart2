From 25e02667ddf300ce67a77394e54ee68347518395 Mon Sep 17 00:00:00 2001
From: Lei Maohui <leimaohui@cn.fujitsu.com>
Date: Tue, 31 May 2016 14:23:40 +0900
Subject: [PATCH 2/3] python-smartpm: change smart to smart2

Signed-off-by: Lei Maohui <leimaohui@cn.fujitsu.com>
---
 .../python/python-smartpm/enviroment-smart.sh      | 216 +++++++++++++++++++++
 meta/recipes-devtools/python/python-smartpm_git.bb |  83 ++++++--
 2 files changed, 278 insertions(+), 21 deletions(-)
 create mode 100755 meta/recipes-devtools/python/python-smartpm/enviroment-smart.sh

diff --git a/meta/recipes-devtools/python/python-smartpm/enviroment-smart.sh b/meta/recipes-devtools/python/python-smartpm/enviroment-smart.sh
new file mode 100755
index 0000000..adebb83
--- /dev/null
+++ b/meta/recipes-devtools/python/python-smartpm/enviroment-smart.sh
@@ -0,0 +1,216 @@
+#!/bin/sh
+
+TARGET_ROOTFS=$1
+PKGS_DIR=$2
+
+#Check the parameters
+if [ -z "$2" -o $1 = "--help" -o $1 = "-h" -o $1 = "-H" ]; then
+    echo ""
+    echo "usage:     . $0 rootfs_dir packages_dir "
+    echo ""
+    echo "#For example: If you want to install rpms from x86_64"
+    echo "     #ls /home/ubinux/x86_64_ubinuxv16_r001_rpm/"
+    echo "     all  ubinux_x86_64  x86_64"
+    echo ""
+    echo "#You should use the following command to set your smart environment"
+    echo "      . $0 /home/ubinux/x86_64_ubinuxv16_rootfs /home/ubinux/x86_64_ubinuxv16_r001_rpm "
+    echo ""
+    exit 0
+fi
+
+if [ ! -d $PKGS_DIR ]; then
+    echo " Error!  The packages_dir is not exist: $PKGS_DIR . Please check. "
+    exit 1
+fi
+
+if [ ! -d $TARGET_ROOTFS ]; then
+    echo " $TARGET_ROOTFS is not exist. mkdir $TARGET_ROOTFS. "
+    mkdir -p $TARGET_ROOTFS
+fi
+
+# Pseudo Environment
+export LD_LIBRARY_PATH=$OECORE_NATIVE_SYSROOT/usr/bin/../lib/pseudo/lib:$OECORE_NATIVE_SYSROOT/usr/bin/../lib/pseudo/lib64
+export LD_PRELOAD=libpseudo.so
+export PSEUDO_PASSWD=$TARGET_ROOTFS
+export PSEUDO_OPTS=
+export PSEUDO_LIBDIR=$OECORE_NATIVE_SYSROOT/usr/bin/../lib/pseudo/lib64
+export PSEUDO_NOSYMLINKEXP=1
+export PSEUDO_DISABLED=0
+export PSEUDO_PREFIX=$OECORE_NATIVE_SYSROOT/usr
+export PSEUDO_LOCALSTATEDIR=`pwd`/pseudo/
+#Create a initial passwd file for smart.
+if [ ! -d $TARGET_ROOTFS/etc ]; then
+    mkdir $TARGET_ROOTFS/etc
+fi
+
+cat << EOF > $TARGET_ROOTFS/etc/passwd
+root::0:0:root:/home/root:/bin/sh
+daemon:*:1:1:daemon:/usr/sbin:/bin/sh
+bin:*:2:2:bin:/bin:/bin/sh
+sys:*:3:3:sys:/dev:/bin/sh
+sync:*:4:65534:sync:/bin:/bin/sync
+games:*:5:60:games:/usr/games:/bin/sh
+man:*:6:12:man:/var/cache/man:/bin/sh
+lp:*:7:7:lp:/var/spool/lpd:/bin/sh
+mail:*:8:8:mail:/var/mail:/bin/sh
+news:*:9:9:news:/var/spool/news:/bin/sh
+uucp:*:10:10:uucp:/var/spool/uucp:/bin/sh
+proxy:*:13:13:proxy:/bin:/bin/sh
+www-data:*:33:33:www-data:/var/www:/bin/sh
+backup:*:34:34:backup:/var/backups:/bin/sh
+list:*:38:38:Mailing List Manager:/var/list:/bin/sh
+irc:*:39:39:ircd:/var/run/ircd:/bin/sh
+gnats:*:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
+nobody:*:65534:65534:nobody:/nonexistent:/bin/sh
+EOF
+#In general,the initial passwd file comes from base-passwd-update pacakage
+#So try to get the passwd from base-passwd-update pacakage
+default_pwd_path=`find $PKGS_DIR -name "base-passwd-update*"`
+echo "Find default_pwd_path = $default_pwd_path"
+ 
+if [ "${default_pwd_path}x" != "x" ]; then
+    echo "find result : `echo "$default_pwd_path" | wc -l`"
+    if [ `echo "$default_pwd_path" | wc -l` != "1" ];then
+        echo "there are more base-passwd-updatesd packages. \ Can't decide which one should be used. \ So use the default passwd file"
+    else
+        base_passwd_tmp_dir="base-passwd-updatesd.temp"
+        mkdir $base_passwd_tmp_dir
+        cp $default_pwd_path $base_passwd_tmp_dir/
+        cd $base_passwd_tmp_dir
+        rpm2cpio ${default_pwd_path} | cpio -idu
+        echo "find ${default_pwd_path}!!"
+        cd ..
+        cp -f ${base_passwd_tmp_dir}/usr/share/base-passwd/passwd.master $TARGET_ROOTFS/etc/passwd
+        rm -rf ${base_passwd_tmp_dir}
+    fi
+fi
+
+DEF_PRIORITY=1
+RPM_VERSION=5
+SMART="smart --log-level=error --data-dir=$TARGET_ROOTFS/var/lib/smart"
+RPM=rpm
+rpm_libdir=$TARGET_ROOTFS"/var/lib/rpm"
+
+echo "Configuring RPM DB settings" 
+rm -rf $rpm_libdir/
+mkdir -p $rpm_libdir/log
+touch $rpm_libdir/log/log.0000000001
+
+cat << EOF > $rpm_libdir/DB_CONFIG
+# ================ Environment\n
+set_data_dir .
+set_create_dir .
+set_lg_dir ./log
+set_tmp_dir ./tmp
+set_flags db_log_autoremove on
+
+# -- thread_count must be >= 8
+set_thread_count 64
+
+# ================ Logging
+
+# ================ Memory Pool
+set_cachesize 0 1048576 0
+set_mp_mmapsize 268435456
+
+# ================ Locking
+set_lk_max_locks 16384
+set_lk_max_lockers 16384
+set_lk_max_objects 16384
+mutex_set_max 163840
+
+# ================ Replication
+EOF
+
+opt="-qa" 
+if [ "$RPM_VERSION" = "4" ]; then
+        opt="--initdb" 
+fi
+
+$RPM --root $TARGET_ROOTFS  --dbpath /var/lib/rpm $opt > /dev/null
+if [ "$?" != "0" ]; then
+        echo "Create rpm database failed." 
+        exit 1
+fi
+
+# RPM_SIGN_PACKAGES setting be ignored
+echo "Configuring Smart settings" 
+rm -rf $TARGET_ROOTFS/var/lib/smart
+$SMART config --set rpm-root="$TARGET_ROOTFS" 
+$SMART config --set rpm-dbpath="/var/lib/rpm" 
+$SMART config --set rpm-extra-macros._var="/var" 
+$SMART config --set rpm-extra-macros._tmppath=/oe_install/tmp
+
+# RPM_PREFER_ELF_ARCH setting be ignored
+$SMART config --set rpm-ignoresize=1
+$SMART config --set rpm-nolinktos=1
+$SMART config --set rpm-noparentdirs=1
+
+# RPM_CHECK_SIGNATURES setting be ignored
+# BAD_RECOMMENDATIONS setting be ignored
+# NO_RECOMMENDATIONS setting be ignored
+# PACKAGE_EXCLUDE setting be ignored
+
+# Create channels
+DISTRO_ARCHS=$(ls -l $PKGS_DIR | awk '/^d/{print $NF}')
+for arch in $DISTRO_ARCHS; do
+        echo "Adding Smart channel $arch" 
+        $SMART channel --add $arch type=rpm-md baseurl="$PKGS_DIR/$arch" -y
+        echo $?
+        $SMART channel --set $arch priority=$DEF_PRIORITY
+done
+
+echo "Adding Smart RPM DB channel" 
+$SMART channel --add rpmsys type=rpm-sys -y
+
+# Construct install scriptlet wrapper
+echo "Configuring RPM cross-install scriptlet_wrapper" 
+if [ $RPM_VERSION = '4' ]; then
+        scriptletcmd="\$2 \$3 \$4" 
+        scriptpath="\$3" 
+else
+        scriptletcmd="\$2 \$1/\$3 \$4" 
+        scriptpath="\$1/\$3" 
+fi
+WORKDIR=${PKGS_DIR}
+cat << EOF > $WORKDIR/scriptlet_wrapper
+#!/bin/bash
+
+export PATH=$PATH
+export D=$TARGET_ROOTFS
+export OFFLINE_ROOT="\$D" 
+export IPKG_OFFLINE_ROOT="\$D" 
+export OPKG_OFFLINE_ROOT="\$D" 
+export INTERCEPT_DIR=$WORKDIR/intercept_scripts
+export NATIVE_ROOT=$OECORE_NATIVE_SYSROOT
+
+echo "$scriptletcmd" 
+
+$scriptletcmd
+if [ \$? -ne 0 ]; then
+        if [ \$4 -eq 1 ]; then
+                mkdir -p \$1/etc/rpm-postinsts
+                num=100
+                while [ -e \$1/etc/rpm-postinsts/\${num}-* ]; do num=\$((num + 1)); done
+                name=\`head -1 $scriptpath | cut -d' ' -f 2\`
+                echo "#!\$2" > \$1/etc/rpm-postinsts/\${num}-\${name}
+                echo "# Arg: \$4" >> \$1/etc/rpm-postinsts/\${num}-\${name}
+                cat $scriptpath >> \$1/etc/rpm-postinsts/\${num}-\${name}
+                chmod +x \$1/etc/rpm-postinsts/\${num}-\${name}
+        else
+                echo "Error: pre/post remove scriptlet failed" 
+        fi
+fi
+
+EOF
+
+chmod 0755 $WORKDIR/scriptlet_wrapper
+$SMART config --set rpm-extra-macros._cross_scriptlet_wrapper="$WORKDIR/scriptlet_wrapper" 
+echo $?
+$SMART config --show
+echo $?
+echo "$SMART config --show" 
+
+#$SMART clean
+echo "$SMART search busybox"
+$SMART search busybox
diff --git a/meta/recipes-devtools/python/python-smartpm_git.bb b/meta/recipes-devtools/python/python-smartpm_git.bb
index d9a908d..b112931 100644
--- a/meta/recipes-devtools/python/python-smartpm_git.bb
+++ b/meta/recipes-devtools/python/python-smartpm_git.bb
@@ -11,27 +11,20 @@ LIC_FILES_CHKSUM = "file://LICENSE;md5=393a5ca445f6965873eca0259a17f833"
 DEPENDS = "python rpm gettext-native python-rpm"
 SRCNAME = "smart"
 
-SRC_URI = "\
-          git://github.com/smartpm/smart.git \
-          file://smartpm-rpm5-nodig.patch \
-          file://smart-recommends.patch \
-          file://smart-improve-error-reporting.patch \
-          file://smart-channelsdir.patch \
-          file://smart-attempt.patch \
-          file://smart-attempt-fix.patch \
-          file://smart-add-for-rpm-ignoresize-check.patch \
-          file://smart-already-installed-message.patch \
-          file://smart-set-noprogress-for-pycurl.patch \
-          file://smart-cache.py-getPackages-matches-name-version.patch \
+SRC_URI = " \
+          git://github.com/ubinux/smart2.git \
+          file://enviroment-smart.sh \
          "
 
-SRCREV = "407a7eca766431257dcd1da15175cc36a1bb22d0"
+SRCREV = "858b31c78c50772e32f3982f2d5b404359e8405f"
 PV = "1.5+git${SRCPV}"
 
 S = "${WORKDIR}/git"
 
 # Options - rpm, qt4, gtk
-PACKAGECONFIG ??= "rpm"
+PACKAGECONFIG_class-target ??= "rpm"
+PACKAGECONFIG_class-native ??= "rpm"
+PACKAGECONFIG_class-nativesdk ??= "rpm"
 
 RPM_RDEP = "${PN}-backend-rpm"
 QT_RDEP = "${PN}-interface-qt4"
@@ -91,20 +84,68 @@ do_install_append() {
    fi
 }
 
-add_native_wrapper() {
-        create_wrapper ${D}/${bindir}/smart \
-		RPM_USRLIBRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('libdir', True), d.getVar('bindir', True))}/rpm \
-		RPM_ETCRPM='$'{RPM_ETCRPM-'`dirname $''realpath`'/${@os.path.relpath(d.getVar('sysconfdir', True), d.getVar('bindir', True))}/rpm} \
-		RPM_LOCALEDIRRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('datadir', True), d.getVar('bindir', True))}/locale
+create_wrapper_sdk () {
+        # Create a wrapper script where extra environment variables are needed
+        #
+        # These are useful to work around relocation issues, by setting environment
+        # variables which point to paths in the filesystem.
+        #
+        # Usage: create_wrapper FILENAME [[VAR=VALUE]..]
+
+        cmd=$1
+        shift
+
+        echo "Generating wrapper script for $cmd"
+
+        mv $cmd $cmd.real
+        cmdname=`basename $cmd`
+        cat <<END >$cmd
+#!/bin/bash
+realpath=\`readlink -fn \$0\`
+export $@
+log=0
+for arg in "\$@"
+do
+        if [ \$arg = "--interface=tgui" ];then
+                log=1
+                break
+        fi
+done
+if [ \$log == 1 ];then
+        exec -a \`dirname \$realpath\`/smart \`dirname \$realpath\`/smart.real "\$@" 2>smart.error | tee smart.log
+        echo "The install information was logged in smart.error and smart.log."
+else
+        exec -a \`dirname \$realpath\`/smart \`dirname \$realpath\`/smart.real "\$@"
+fi
+END
+        chmod +x $cmd
+}
+
+add_native_or_sdk_wrapper() {
+        if [ "$1" = "sdk" ]; then
+                RPM_ETCRPM='$'{RPM_ETCRPM-'$'SDKTARGETSYSROOT/${@os.path.relpath(d.getVar('sysconfdir', True), d.getVar('base_prefix', True))}/rpm}
+                create_wrapper_sdk ${D}/${bindir}/smart \
+                        RPM_USRLIBRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('libdir', True), d.getVar('bindir', True))}/rpm \
+                        RPM_ETCRPM=${RPM_ETCRPM} \
+                        RPM_LOCALEDIRRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('datadir', True), d.getVar('bindir', True))}/locale
+        else
+                RPM_ETCRPM='$'{RPM_ETCRPM-'`dirname $''realpath`'/${@os.path.relpath(d.getVar('sysconfdir', True), d.getVar('bindir', True))}/rpm}
+                create_wrapper ${D}/${bindir}/smart \
+                        RPM_USRLIBRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('libdir', True), d.getVar('bindir', True))}/rpm \
+                        RPM_ETCRPM=${RPM_ETCRPM} \
+                        RPM_LOCALEDIRRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('datadir', True), d.getVar('bindir', True))}/locale
+        fi
 }
 
 do_install_append_class-native() {
         sed -i -e 's|^#!.*/usr/bin/env python|#! /usr/bin/env nativepython|' ${D}${bindir}/smart
-        add_native_wrapper
+        add_native_or_sdk_wrapper "native"
 }
 
 do_install_append_class-nativesdk() {
-        add_native_wrapper
+        add_native_or_sdk_wrapper "sdk"
+        install -d ${D}${bindir}/
+        install -m 0755 ${WORKDIR}/enviroment-smart.sh ${D}${bindir}/
 }
 
 PACKAGES = "${PN}-dev ${PN}-dbg ${PN}-doc smartpm \
-- 
1.8.4.2

